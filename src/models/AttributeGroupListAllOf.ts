/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AttributeGroupListAllOfLabels } from './AttributeGroupListAllOfLabels';
import {
    AttributeGroupListAllOfLabelsFromJSON,
    AttributeGroupListAllOfLabelsFromJSONTyped,
    AttributeGroupListAllOfLabelsToJSON,
} from './AttributeGroupListAllOfLabels';

/**
 * 
 * @export
 * @interface AttributeGroupListAllOf
 */
export interface AttributeGroupListAllOf {
    /**
     * Attribute group code
     * @type {string}
     * @memberof AttributeGroupListAllOf
     */
    code: string;
    /**
     * Attribute group order among other attribute groups
     * @type {number}
     * @memberof AttributeGroupListAllOf
     */
    sortOrder?: number;
    /**
     * Attribute codes that compose the attribute group
     * @type {Array<string>}
     * @memberof AttributeGroupListAllOf
     */
    attributes?: Array<string>;
    /**
     * 
     * @type {AttributeGroupListAllOfLabels}
     * @memberof AttributeGroupListAllOf
     */
    labels?: AttributeGroupListAllOfLabels;
}

/**
 * Check if a given object implements the AttributeGroupListAllOf interface.
 */
export function instanceOfAttributeGroupListAllOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "code" in value;

    return isInstance;
}

export function AttributeGroupListAllOfFromJSON(json: any): AttributeGroupListAllOf {
    return AttributeGroupListAllOfFromJSONTyped(json, false);
}

export function AttributeGroupListAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): AttributeGroupListAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': json['code'],
        'sortOrder': !exists(json, 'sort_order') ? undefined : json['sort_order'],
        'attributes': !exists(json, 'attributes') ? undefined : json['attributes'],
        'labels': !exists(json, 'labels') ? undefined : AttributeGroupListAllOfLabelsFromJSON(json['labels']),
    };
}

export function AttributeGroupListAllOfToJSON(value?: AttributeGroupListAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'sort_order': value.sortOrder,
        'attributes': value.attributes,
        'labels': AttributeGroupListAllOfLabelsToJSON(value.labels),
    };
}

