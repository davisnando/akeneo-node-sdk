/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ReferenceEntityAllOf1Labels } from './ReferenceEntityAllOf1Labels';
import {
    ReferenceEntityAllOf1LabelsFromJSON,
    ReferenceEntityAllOf1LabelsFromJSONTyped,
    ReferenceEntityAllOf1LabelsToJSON,
} from './ReferenceEntityAllOf1Labels';
import type { ReferenceEntityListAllOfLinks } from './ReferenceEntityListAllOfLinks';
import {
    ReferenceEntityListAllOfLinksFromJSON,
    ReferenceEntityListAllOfLinksFromJSONTyped,
    ReferenceEntityListAllOfLinksToJSON,
} from './ReferenceEntityListAllOfLinks';

/**
 * 
 * @export
 * @interface ReferenceEntityList
 */
export interface ReferenceEntityList {
    /**
     * 
     * @type {ReferenceEntityListAllOfLinks}
     * @memberof ReferenceEntityList
     */
    links?: ReferenceEntityListAllOfLinks;
    /**
     * Reference entity code
     * @type {string}
     * @memberof ReferenceEntityList
     */
    code: string;
    /**
     * 
     * @type {ReferenceEntityAllOf1Labels}
     * @memberof ReferenceEntityList
     */
    labels?: ReferenceEntityAllOf1Labels;
    /**
     * Code of the reference entity image
     * @type {string}
     * @memberof ReferenceEntityList
     */
    image?: string;
}

/**
 * Check if a given object implements the ReferenceEntityList interface.
 */
export function instanceOfReferenceEntityList(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "code" in value;

    return isInstance;
}

export function ReferenceEntityListFromJSON(json: any): ReferenceEntityList {
    return ReferenceEntityListFromJSONTyped(json, false);
}

export function ReferenceEntityListFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReferenceEntityList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'links': !exists(json, '_links') ? undefined : ReferenceEntityListAllOfLinksFromJSON(json['_links']),
        'code': json['code'],
        'labels': !exists(json, 'labels') ? undefined : ReferenceEntityAllOf1LabelsFromJSON(json['labels']),
        'image': !exists(json, 'image') ? undefined : json['image'],
    };
}

export function ReferenceEntityListToJSON(value?: ReferenceEntityList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '_links': ReferenceEntityListAllOfLinksToJSON(value.links),
        'code': value.code,
        'labels': ReferenceEntityAllOf1LabelsToJSON(value.labels),
        'image': value.image,
    };
}

