/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PostAttributesAttributeCodeOptionsRequestLabels } from './PostAttributesAttributeCodeOptionsRequestLabels';
import {
    PostAttributesAttributeCodeOptionsRequestLabelsFromJSON,
    PostAttributesAttributeCodeOptionsRequestLabelsFromJSONTyped,
    PostAttributesAttributeCodeOptionsRequestLabelsToJSON,
} from './PostAttributesAttributeCodeOptionsRequestLabels';

/**
 * 
 * @export
 * @interface AttributeOption
 */
export interface AttributeOption {
    /**
     * Code of option
     * @type {string}
     * @memberof AttributeOption
     */
    code: string;
    /**
     * Code of attribute related to the attribute option
     * @type {string}
     * @memberof AttributeOption
     */
    attribute?: string;
    /**
     * Order of attribute option
     * @type {number}
     * @memberof AttributeOption
     */
    sortOrder?: number;
    /**
     * 
     * @type {PostAttributesAttributeCodeOptionsRequestLabels}
     * @memberof AttributeOption
     */
    labels?: PostAttributesAttributeCodeOptionsRequestLabels;
}

/**
 * Check if a given object implements the AttributeOption interface.
 */
export function instanceOfAttributeOption(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "code" in value;

    return isInstance;
}

export function AttributeOptionFromJSON(json: any): AttributeOption {
    return AttributeOptionFromJSONTyped(json, false);
}

export function AttributeOptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): AttributeOption {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': json['code'],
        'attribute': !exists(json, 'attribute') ? undefined : json['attribute'],
        'sortOrder': !exists(json, 'sort_order') ? undefined : json['sort_order'],
        'labels': !exists(json, 'labels') ? undefined : PostAttributesAttributeCodeOptionsRequestLabelsFromJSON(json['labels']),
    };
}

export function AttributeOptionToJSON(value?: AttributeOption | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'attribute': value.attribute,
        'sort_order': value.sortOrder,
        'labels': PostAttributesAttributeCodeOptionsRequestLabelsToJSON(value.labels),
    };
}

