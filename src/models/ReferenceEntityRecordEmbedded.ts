/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ReferenceEntityRecordEmbeddedItemsInner } from './ReferenceEntityRecordEmbeddedItemsInner';
import {
    ReferenceEntityRecordEmbeddedItemsInnerFromJSON,
    ReferenceEntityRecordEmbeddedItemsInnerFromJSONTyped,
    ReferenceEntityRecordEmbeddedItemsInnerToJSON,
} from './ReferenceEntityRecordEmbeddedItemsInner';

/**
 * 
 * @export
 * @interface ReferenceEntityRecordEmbedded
 */
export interface ReferenceEntityRecordEmbedded {
    /**
     * 
     * @type {Array<ReferenceEntityRecordEmbeddedItemsInner>}
     * @memberof ReferenceEntityRecordEmbedded
     */
    items?: Array<ReferenceEntityRecordEmbeddedItemsInner>;
}

/**
 * Check if a given object implements the ReferenceEntityRecordEmbedded interface.
 */
export function instanceOfReferenceEntityRecordEmbedded(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ReferenceEntityRecordEmbeddedFromJSON(json: any): ReferenceEntityRecordEmbedded {
    return ReferenceEntityRecordEmbeddedFromJSONTyped(json, false);
}

export function ReferenceEntityRecordEmbeddedFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReferenceEntityRecordEmbedded {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': !exists(json, 'items') ? undefined : ((json['items'] as Array<any>).map(ReferenceEntityRecordEmbeddedItemsInnerFromJSON)),
    };
}

export function ReferenceEntityRecordEmbeddedToJSON(value?: ReferenceEntityRecordEmbedded | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': value.items === undefined ? undefined : ((value.items as Array<any>).map(ReferenceEntityRecordEmbeddedItemsInnerToJSON)),
    };
}

