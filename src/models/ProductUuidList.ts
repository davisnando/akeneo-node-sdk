/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProductListAllOf1Completenesses } from './ProductListAllOf1Completenesses';
import {
    ProductListAllOf1CompletenessesFromJSON,
    ProductListAllOf1CompletenessesFromJSONTyped,
    ProductListAllOf1CompletenessesToJSON,
} from './ProductListAllOf1Completenesses';
import type { ProductListAllOf1Metadata } from './ProductListAllOf1Metadata';
import {
    ProductListAllOf1MetadataFromJSON,
    ProductListAllOf1MetadataFromJSONTyped,
    ProductListAllOf1MetadataToJSON,
} from './ProductListAllOf1Metadata';
import type { ProductListAllOf1Values } from './ProductListAllOf1Values';
import {
    ProductListAllOf1ValuesFromJSON,
    ProductListAllOf1ValuesFromJSONTyped,
    ProductListAllOf1ValuesToJSON,
} from './ProductListAllOf1Values';
import type { ProductListAllOfLinks } from './ProductListAllOfLinks';
import {
    ProductListAllOfLinksFromJSON,
    ProductListAllOfLinksFromJSONTyped,
    ProductListAllOfLinksToJSON,
} from './ProductListAllOfLinks';
import type { ProductUuidListAllOfAssociations } from './ProductUuidListAllOfAssociations';
import {
    ProductUuidListAllOfAssociationsFromJSON,
    ProductUuidListAllOfAssociationsFromJSONTyped,
    ProductUuidListAllOfAssociationsToJSON,
} from './ProductUuidListAllOfAssociations';
import type { ProductUuidListAllOfQuantifiedAssociations } from './ProductUuidListAllOfQuantifiedAssociations';
import {
    ProductUuidListAllOfQuantifiedAssociationsFromJSON,
    ProductUuidListAllOfQuantifiedAssociationsFromJSONTyped,
    ProductUuidListAllOfQuantifiedAssociationsToJSON,
} from './ProductUuidListAllOfQuantifiedAssociations';

/**
 * 
 * @export
 * @interface ProductUuidList
 */
export interface ProductUuidList {
    /**
     * 
     * @type {ProductListAllOfLinks}
     * @memberof ProductUuidList
     */
    links?: ProductListAllOfLinks;
    /**
     * Product uuid
     * @type {string}
     * @memberof ProductUuidList
     */
    uuid?: string;
    /**
     * Whether the product is enabled
     * @type {boolean}
     * @memberof ProductUuidList
     */
    enabled?: boolean;
    /**
     * <a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.
     * @type {string}
     * @memberof ProductUuidList
     */
    family?: string;
    /**
     * Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified
     * @type {Array<string>}
     * @memberof ProductUuidList
     */
    categories?: Array<string>;
    /**
     * Codes of the groups to which the product belong
     * @type {Array<string>}
     * @memberof ProductUuidList
     */
    groups?: Array<string>;
    /**
     * Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.
     * @type {string}
     * @memberof ProductUuidList
     */
    parent?: string;
    /**
     * 
     * @type {ProductListAllOf1Values}
     * @memberof ProductUuidList
     */
    values?: ProductListAllOf1Values;
    /**
     * 
     * @type {ProductUuidListAllOfAssociations}
     * @memberof ProductUuidList
     */
    associations?: ProductUuidListAllOfAssociations;
    /**
     * 
     * @type {ProductUuidListAllOfQuantifiedAssociations}
     * @memberof ProductUuidList
     */
    quantifiedAssociations?: ProductUuidListAllOfQuantifiedAssociations;
    /**
     * Date of creation
     * @type {string}
     * @memberof ProductUuidList
     */
    created?: string;
    /**
     * Date of the last update
     * @type {string}
     * @memberof ProductUuidList
     */
    updated?: string;
    /**
     * 
     * @type {ProductListAllOf1Metadata}
     * @memberof ProductUuidList
     */
    metadata?: ProductListAllOf1Metadata;
    /**
     * Product quality scores for each channel/locale combination (only available since the 5.0 and when the "with_quality_scores" query parameter is set to "true")
     * @type {object}
     * @memberof ProductUuidList
     */
    qualityScores?: object;
    /**
     * Product completenesses for each channel/locale combination (only available on SaaS platforms, and when the "with_completenesses" query parameter is set to "true")
     * @type {Array<ProductListAllOf1Completenesses>}
     * @memberof ProductUuidList
     */
    completenesses?: Array<ProductListAllOf1Completenesses>;
}

/**
 * Check if a given object implements the ProductUuidList interface.
 */
export function instanceOfProductUuidList(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProductUuidListFromJSON(json: any): ProductUuidList {
    return ProductUuidListFromJSONTyped(json, false);
}

export function ProductUuidListFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductUuidList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'links': !exists(json, '_links') ? undefined : ProductListAllOfLinksFromJSON(json['_links']),
        'uuid': !exists(json, 'uuid') ? undefined : json['uuid'],
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'family': !exists(json, 'family') ? undefined : json['family'],
        'categories': !exists(json, 'categories') ? undefined : json['categories'],
        'groups': !exists(json, 'groups') ? undefined : json['groups'],
        'parent': !exists(json, 'parent') ? undefined : json['parent'],
        'values': !exists(json, 'values') ? undefined : ProductListAllOf1ValuesFromJSON(json['values']),
        'associations': !exists(json, 'associations') ? undefined : ProductUuidListAllOfAssociationsFromJSON(json['associations']),
        'quantifiedAssociations': !exists(json, 'quantified_associations') ? undefined : ProductUuidListAllOfQuantifiedAssociationsFromJSON(json['quantified_associations']),
        'created': !exists(json, 'created') ? undefined : json['created'],
        'updated': !exists(json, 'updated') ? undefined : json['updated'],
        'metadata': !exists(json, 'metadata') ? undefined : ProductListAllOf1MetadataFromJSON(json['metadata']),
        'qualityScores': !exists(json, 'quality_scores') ? undefined : json['quality_scores'],
        'completenesses': !exists(json, 'completenesses') ? undefined : ((json['completenesses'] as Array<any>).map(ProductListAllOf1CompletenessesFromJSON)),
    };
}

export function ProductUuidListToJSON(value?: ProductUuidList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '_links': ProductListAllOfLinksToJSON(value.links),
        'uuid': value.uuid,
        'enabled': value.enabled,
        'family': value.family,
        'categories': value.categories,
        'groups': value.groups,
        'parent': value.parent,
        'values': ProductListAllOf1ValuesToJSON(value.values),
        'associations': ProductUuidListAllOfAssociationsToJSON(value.associations),
        'quantified_associations': ProductUuidListAllOfQuantifiedAssociationsToJSON(value.quantifiedAssociations),
        'created': value.created,
        'updated': value.updated,
        'metadata': ProductListAllOf1MetadataToJSON(value.metadata),
        'quality_scores': value.qualityScores,
        'completenesses': value.completenesses === undefined ? undefined : ((value.completenesses as Array<any>).map(ProductListAllOf1CompletenessesToJSON)),
    };
}

