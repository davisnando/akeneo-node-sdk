/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DeprecatedAssetListAllOfLink1Download } from './DeprecatedAssetListAllOfLink1Download';
import {
    DeprecatedAssetListAllOfLink1DownloadFromJSON,
    DeprecatedAssetListAllOfLink1DownloadFromJSONTyped,
    DeprecatedAssetListAllOfLink1DownloadToJSON,
} from './DeprecatedAssetListAllOfLink1Download';
import type { DeprecatedAssetListAllOfLink1Self } from './DeprecatedAssetListAllOfLink1Self';
import {
    DeprecatedAssetListAllOfLink1SelfFromJSON,
    DeprecatedAssetListAllOfLink1SelfFromJSONTyped,
    DeprecatedAssetListAllOfLink1SelfToJSON,
} from './DeprecatedAssetListAllOfLink1Self';

/**
 * Links to get and download the reference file
 * @export
 * @interface DeprecatedAssetListAllOfLink1
 */
export interface DeprecatedAssetListAllOfLink1 {
    /**
     * 
     * @type {DeprecatedAssetListAllOfLink1Self}
     * @memberof DeprecatedAssetListAllOfLink1
     */
    self?: DeprecatedAssetListAllOfLink1Self;
    /**
     * 
     * @type {DeprecatedAssetListAllOfLink1Download}
     * @memberof DeprecatedAssetListAllOfLink1
     */
    download?: DeprecatedAssetListAllOfLink1Download;
}

/**
 * Check if a given object implements the DeprecatedAssetListAllOfLink1 interface.
 */
export function instanceOfDeprecatedAssetListAllOfLink1(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DeprecatedAssetListAllOfLink1FromJSON(json: any): DeprecatedAssetListAllOfLink1 {
    return DeprecatedAssetListAllOfLink1FromJSONTyped(json, false);
}

export function DeprecatedAssetListAllOfLink1FromJSONTyped(json: any, ignoreDiscriminator: boolean): DeprecatedAssetListAllOfLink1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'self': !exists(json, 'self') ? undefined : DeprecatedAssetListAllOfLink1SelfFromJSON(json['self']),
        'download': !exists(json, 'download') ? undefined : DeprecatedAssetListAllOfLink1DownloadFromJSON(json['download']),
    };
}

export function DeprecatedAssetListAllOfLink1ToJSON(value?: DeprecatedAssetListAllOfLink1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'self': DeprecatedAssetListAllOfLink1SelfToJSON(value.self),
        'download': DeprecatedAssetListAllOfLink1DownloadToJSON(value.download),
    };
}

