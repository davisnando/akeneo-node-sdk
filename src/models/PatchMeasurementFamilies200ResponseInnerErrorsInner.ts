/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PatchMeasurementFamilies200ResponseInnerErrorsInner
 */
export interface PatchMeasurementFamilies200ResponseInnerErrorsInner {
    /**
     * 
     * @type {string}
     * @memberof PatchMeasurementFamilies200ResponseInnerErrorsInner
     */
    property?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchMeasurementFamilies200ResponseInnerErrorsInner
     */
    message?: string;
}

/**
 * Check if a given object implements the PatchMeasurementFamilies200ResponseInnerErrorsInner interface.
 */
export function instanceOfPatchMeasurementFamilies200ResponseInnerErrorsInner(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PatchMeasurementFamilies200ResponseInnerErrorsInnerFromJSON(json: any): PatchMeasurementFamilies200ResponseInnerErrorsInner {
    return PatchMeasurementFamilies200ResponseInnerErrorsInnerFromJSONTyped(json, false);
}

export function PatchMeasurementFamilies200ResponseInnerErrorsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchMeasurementFamilies200ResponseInnerErrorsInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'property': !exists(json, 'property') ? undefined : json['property'],
        'message': !exists(json, 'message') ? undefined : json['message'],
    };
}

export function PatchMeasurementFamilies200ResponseInnerErrorsInnerToJSON(value?: PatchMeasurementFamilies200ResponseInnerErrorsInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'property': value.property,
        'message': value.message,
    };
}

