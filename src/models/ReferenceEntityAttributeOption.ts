/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PostAttributesRequestLabels } from './PostAttributesRequestLabels';
import {
    PostAttributesRequestLabelsFromJSON,
    PostAttributesRequestLabelsFromJSONTyped,
    PostAttributesRequestLabelsToJSON,
} from './PostAttributesRequestLabels';

/**
 * 
 * @export
 * @interface ReferenceEntityAttributeOption
 */
export interface ReferenceEntityAttributeOption {
    /**
     * Attribute's option code
     * @type {string}
     * @memberof ReferenceEntityAttributeOption
     */
    code: string;
    /**
     * 
     * @type {PostAttributesRequestLabels}
     * @memberof ReferenceEntityAttributeOption
     */
    labels?: PostAttributesRequestLabels;
}

/**
 * Check if a given object implements the ReferenceEntityAttributeOption interface.
 */
export function instanceOfReferenceEntityAttributeOption(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "code" in value;

    return isInstance;
}

export function ReferenceEntityAttributeOptionFromJSON(json: any): ReferenceEntityAttributeOption {
    return ReferenceEntityAttributeOptionFromJSONTyped(json, false);
}

export function ReferenceEntityAttributeOptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReferenceEntityAttributeOption {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': json['code'],
        'labels': !exists(json, 'labels') ? undefined : PostAttributesRequestLabelsFromJSON(json['labels']),
    };
}

export function ReferenceEntityAttributeOptionToJSON(value?: ReferenceEntityAttributeOption | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'labels': PostAttributesRequestLabelsToJSON(value.labels),
    };
}

