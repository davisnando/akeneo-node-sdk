/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ReferenceEntityRecordEmbeddedItemsInnerAllOfValuesValueInner } from './ReferenceEntityRecordEmbeddedItemsInnerAllOfValuesValueInner';
import {
    ReferenceEntityRecordEmbeddedItemsInnerAllOfValuesValueInnerFromJSON,
    ReferenceEntityRecordEmbeddedItemsInnerAllOfValuesValueInnerFromJSONTyped,
    ReferenceEntityRecordEmbeddedItemsInnerAllOfValuesValueInnerToJSON,
} from './ReferenceEntityRecordEmbeddedItemsInnerAllOfValuesValueInner';

/**
 * 
 * @export
 * @interface PatchReferenceEntityRecordsCodeRequest
 */
export interface PatchReferenceEntityRecordsCodeRequest {
    /**
     * Code of the record
     * @type {string}
     * @memberof PatchReferenceEntityRecordsCodeRequest
     */
    code: string;
    /**
     * Record attributes values, see <a href='/concepts/reference-entities.html#focus-on-the-reference-entity-record-values'>Reference entity record values</a> section for more details
     * @type {{ [key: string]: Array<ReferenceEntityRecordEmbeddedItemsInnerAllOfValuesValueInner>; }}
     * @memberof PatchReferenceEntityRecordsCodeRequest
     */
    values?: { [key: string]: Array<ReferenceEntityRecordEmbeddedItemsInnerAllOfValuesValueInner>; };
    /**
     * Date of creation.
     * @type {string}
     * @memberof PatchReferenceEntityRecordsCodeRequest
     */
    created?: string;
    /**
     * Date of the last update.
     * @type {string}
     * @memberof PatchReferenceEntityRecordsCodeRequest
     */
    updated?: string;
}

/**
 * Check if a given object implements the PatchReferenceEntityRecordsCodeRequest interface.
 */
export function instanceOfPatchReferenceEntityRecordsCodeRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "code" in value;

    return isInstance;
}

export function PatchReferenceEntityRecordsCodeRequestFromJSON(json: any): PatchReferenceEntityRecordsCodeRequest {
    return PatchReferenceEntityRecordsCodeRequestFromJSONTyped(json, false);
}

export function PatchReferenceEntityRecordsCodeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchReferenceEntityRecordsCodeRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': json['code'],
        'values': !exists(json, 'values') ? undefined : json['values'],
        'created': !exists(json, 'created') ? undefined : json['created'],
        'updated': !exists(json, 'updated') ? undefined : json['updated'],
    };
}

export function PatchReferenceEntityRecordsCodeRequestToJSON(value?: PatchReferenceEntityRecordsCodeRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'values': value.values,
        'created': value.created,
        'updated': value.updated,
    };
}

