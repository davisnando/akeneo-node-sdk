/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Units to which the given metric attributes should be converted when exporting products
 * @export
 * @interface ChannelsEmbeddedItemsInnerAllOfConversionUnits
 */
export interface ChannelsEmbeddedItemsInnerAllOfConversionUnits {
    /**
     * Conversion unit code used to convert the values of the attribute `attributeCode` when exporting via the channel
     * @type {string}
     * @memberof ChannelsEmbeddedItemsInnerAllOfConversionUnits
     */
    attributeCode?: string;
}

/**
 * Check if a given object implements the ChannelsEmbeddedItemsInnerAllOfConversionUnits interface.
 */
export function instanceOfChannelsEmbeddedItemsInnerAllOfConversionUnits(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelsEmbeddedItemsInnerAllOfConversionUnitsFromJSON(json: any): ChannelsEmbeddedItemsInnerAllOfConversionUnits {
    return ChannelsEmbeddedItemsInnerAllOfConversionUnitsFromJSONTyped(json, false);
}

export function ChannelsEmbeddedItemsInnerAllOfConversionUnitsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelsEmbeddedItemsInnerAllOfConversionUnits {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attributeCode': !exists(json, 'attributeCode') ? undefined : json['attributeCode'],
    };
}

export function ChannelsEmbeddedItemsInnerAllOfConversionUnitsToJSON(value?: ChannelsEmbeddedItemsInnerAllOfConversionUnits | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attributeCode': value.attributeCode,
    };
}

