/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PostFamiliesFamilyCodeVariantsRequestLabels } from './PostFamiliesFamilyCodeVariantsRequestLabels';
import {
    PostFamiliesFamilyCodeVariantsRequestLabelsFromJSON,
    PostFamiliesFamilyCodeVariantsRequestLabelsFromJSONTyped,
    PostFamiliesFamilyCodeVariantsRequestLabelsToJSON,
} from './PostFamiliesFamilyCodeVariantsRequestLabels';
import type { PostFamiliesFamilyCodeVariantsRequestVariantAttributeSetsInner } from './PostFamiliesFamilyCodeVariantsRequestVariantAttributeSetsInner';
import {
    PostFamiliesFamilyCodeVariantsRequestVariantAttributeSetsInnerFromJSON,
    PostFamiliesFamilyCodeVariantsRequestVariantAttributeSetsInnerFromJSONTyped,
    PostFamiliesFamilyCodeVariantsRequestVariantAttributeSetsInnerToJSON,
} from './PostFamiliesFamilyCodeVariantsRequestVariantAttributeSetsInner';

/**
 * 
 * @export
 * @interface FamilyVariant
 */
export interface FamilyVariant {
    /**
     * Family variant code
     * @type {string}
     * @memberof FamilyVariant
     */
    code: string;
    /**
     * Attributes distribution according to the enrichment level
     * @type {Array<PostFamiliesFamilyCodeVariantsRequestVariantAttributeSetsInner>}
     * @memberof FamilyVariant
     */
    variantAttributeSets: Array<PostFamiliesFamilyCodeVariantsRequestVariantAttributeSetsInner>;
    /**
     * 
     * @type {PostFamiliesFamilyCodeVariantsRequestLabels}
     * @memberof FamilyVariant
     */
    labels?: PostFamiliesFamilyCodeVariantsRequestLabels;
}

/**
 * Check if a given object implements the FamilyVariant interface.
 */
export function instanceOfFamilyVariant(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "code" in value;
    isInstance = isInstance && "variantAttributeSets" in value;

    return isInstance;
}

export function FamilyVariantFromJSON(json: any): FamilyVariant {
    return FamilyVariantFromJSONTyped(json, false);
}

export function FamilyVariantFromJSONTyped(json: any, ignoreDiscriminator: boolean): FamilyVariant {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': json['code'],
        'variantAttributeSets': ((json['variant_attribute_sets'] as Array<any>).map(PostFamiliesFamilyCodeVariantsRequestVariantAttributeSetsInnerFromJSON)),
        'labels': !exists(json, 'labels') ? undefined : PostFamiliesFamilyCodeVariantsRequestLabelsFromJSON(json['labels']),
    };
}

export function FamilyVariantToJSON(value?: FamilyVariant | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'variant_attribute_sets': ((value.variantAttributeSets as Array<any>).map(PostFamiliesFamilyCodeVariantsRequestVariantAttributeSetsInnerToJSON)),
        'labels': PostFamiliesFamilyCodeVariantsRequestLabelsToJSON(value.labels),
    };
}

