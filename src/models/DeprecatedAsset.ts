/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PostPamAssetsRequestReferenceFilesInner } from './PostPamAssetsRequestReferenceFilesInner';
import {
    PostPamAssetsRequestReferenceFilesInnerFromJSON,
    PostPamAssetsRequestReferenceFilesInnerFromJSONTyped,
    PostPamAssetsRequestReferenceFilesInnerToJSON,
} from './PostPamAssetsRequestReferenceFilesInner';
import type { PostPamAssetsRequestVariationFilesInner } from './PostPamAssetsRequestVariationFilesInner';
import {
    PostPamAssetsRequestVariationFilesInnerFromJSON,
    PostPamAssetsRequestVariationFilesInnerFromJSONTyped,
    PostPamAssetsRequestVariationFilesInnerToJSON,
} from './PostPamAssetsRequestVariationFilesInner';

/**
 * 
 * @export
 * @interface DeprecatedAsset
 */
export interface DeprecatedAsset {
    /**
     * PAM asset code
     * @type {string}
     * @memberof DeprecatedAsset
     */
    code: string;
    /**
     * Codes of the PAM asset categories in which the asset is classified
     * @type {Array<string>}
     * @memberof DeprecatedAsset
     */
    categories?: Array<string>;
    /**
     * Description of the PAM asset
     * @type {string}
     * @memberof DeprecatedAsset
     */
    description?: string;
    /**
     * Whether the asset is localized or not, meaning if you want to have different reference files for each of your locale
     * @type {boolean}
     * @memberof DeprecatedAsset
     */
    localizable?: boolean;
    /**
     * Tags of the PAM asset
     * @type {Array<string>}
     * @memberof DeprecatedAsset
     */
    tags?: Array<string>;
    /**
     * Date on which the PAM asset expire
     * @type {string}
     * @memberof DeprecatedAsset
     */
    endOfUse?: string;
    /**
     * Variations of the PAM asset
     * @type {Array<PostPamAssetsRequestVariationFilesInner>}
     * @memberof DeprecatedAsset
     */
    variationFiles?: Array<PostPamAssetsRequestVariationFilesInner>;
    /**
     * Reference files of the PAM asset
     * @type {Array<PostPamAssetsRequestReferenceFilesInner>}
     * @memberof DeprecatedAsset
     */
    referenceFiles?: Array<PostPamAssetsRequestReferenceFilesInner>;
}

/**
 * Check if a given object implements the DeprecatedAsset interface.
 */
export function instanceOfDeprecatedAsset(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "code" in value;

    return isInstance;
}

export function DeprecatedAssetFromJSON(json: any): DeprecatedAsset {
    return DeprecatedAssetFromJSONTyped(json, false);
}

export function DeprecatedAssetFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeprecatedAsset {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': json['code'],
        'categories': !exists(json, 'categories') ? undefined : json['categories'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'localizable': !exists(json, 'localizable') ? undefined : json['localizable'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'endOfUse': !exists(json, 'end_of_use') ? undefined : json['end_of_use'],
        'variationFiles': !exists(json, 'variation_files') ? undefined : ((json['variation_files'] as Array<any>).map(PostPamAssetsRequestVariationFilesInnerFromJSON)),
        'referenceFiles': !exists(json, 'reference_files') ? undefined : ((json['reference_files'] as Array<any>).map(PostPamAssetsRequestReferenceFilesInnerFromJSON)),
    };
}

export function DeprecatedAssetToJSON(value?: DeprecatedAsset | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'categories': value.categories,
        'description': value.description,
        'localizable': value.localizable,
        'tags': value.tags,
        'end_of_use': value.endOfUse,
        'variation_files': value.variationFiles === undefined ? undefined : ((value.variationFiles as Array<any>).map(PostPamAssetsRequestVariationFilesInnerToJSON)),
        'reference_files': value.referenceFiles === undefined ? undefined : ((value.referenceFiles as Array<any>).map(PostPamAssetsRequestReferenceFilesInnerToJSON)),
    };
}

