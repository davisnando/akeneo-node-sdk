/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ReferenceEntitiesEmbedded } from './ReferenceEntitiesEmbedded';
import {
    ReferenceEntitiesEmbeddedFromJSON,
    ReferenceEntitiesEmbeddedFromJSONTyped,
    ReferenceEntitiesEmbeddedToJSON,
} from './ReferenceEntitiesEmbedded';
import type { ReferenceEntitiesLinks } from './ReferenceEntitiesLinks';
import {
    ReferenceEntitiesLinksFromJSON,
    ReferenceEntitiesLinksFromJSONTyped,
    ReferenceEntitiesLinksToJSON,
} from './ReferenceEntitiesLinks';

/**
 * 
 * @export
 * @interface ReferenceEntities
 */
export interface ReferenceEntities {
    /**
     * 
     * @type {ReferenceEntitiesEmbedded}
     * @memberof ReferenceEntities
     */
    embedded?: ReferenceEntitiesEmbedded;
    /**
     * 
     * @type {ReferenceEntitiesLinks}
     * @memberof ReferenceEntities
     */
    links?: ReferenceEntitiesLinks;
}

/**
 * Check if a given object implements the ReferenceEntities interface.
 */
export function instanceOfReferenceEntities(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ReferenceEntitiesFromJSON(json: any): ReferenceEntities {
    return ReferenceEntitiesFromJSONTyped(json, false);
}

export function ReferenceEntitiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReferenceEntities {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'embedded': !exists(json, '_embedded') ? undefined : ReferenceEntitiesEmbeddedFromJSON(json['_embedded']),
        'links': !exists(json, '_links') ? undefined : ReferenceEntitiesLinksFromJSON(json['_links']),
    };
}

export function ReferenceEntitiesToJSON(value?: ReferenceEntities | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '_embedded': ReferenceEntitiesEmbeddedToJSON(value.embedded),
        '_links': ReferenceEntitiesLinksToJSON(value.links),
    };
}

