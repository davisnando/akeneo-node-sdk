/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MediaFileAllOfLinksDownload } from './MediaFileAllOfLinksDownload';
import {
    MediaFileAllOfLinksDownloadFromJSON,
    MediaFileAllOfLinksDownloadFromJSONTyped,
    MediaFileAllOfLinksDownloadToJSON,
} from './MediaFileAllOfLinksDownload';
import type { MediaFileListAllOfLinksSelf } from './MediaFileListAllOfLinksSelf';
import {
    MediaFileListAllOfLinksSelfFromJSON,
    MediaFileListAllOfLinksSelfFromJSONTyped,
    MediaFileListAllOfLinksSelfToJSON,
} from './MediaFileListAllOfLinksSelf';

/**
 * 
 * @export
 * @interface MediaFileListAllOfLinks
 */
export interface MediaFileListAllOfLinks {
    /**
     * 
     * @type {MediaFileListAllOfLinksSelf}
     * @memberof MediaFileListAllOfLinks
     */
    self?: MediaFileListAllOfLinksSelf;
    /**
     * 
     * @type {MediaFileAllOfLinksDownload}
     * @memberof MediaFileListAllOfLinks
     */
    download?: MediaFileAllOfLinksDownload;
}

/**
 * Check if a given object implements the MediaFileListAllOfLinks interface.
 */
export function instanceOfMediaFileListAllOfLinks(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MediaFileListAllOfLinksFromJSON(json: any): MediaFileListAllOfLinks {
    return MediaFileListAllOfLinksFromJSONTyped(json, false);
}

export function MediaFileListAllOfLinksFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaFileListAllOfLinks {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'self': !exists(json, 'self') ? undefined : MediaFileListAllOfLinksSelfFromJSON(json['self']),
        'download': !exists(json, 'download') ? undefined : MediaFileAllOfLinksDownloadFromJSON(json['download']),
    };
}

export function MediaFileListAllOfLinksToJSON(value?: MediaFileListAllOfLinks | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'self': MediaFileListAllOfLinksSelfToJSON(value.self),
        'download': MediaFileAllOfLinksDownloadToJSON(value.download),
    };
}

