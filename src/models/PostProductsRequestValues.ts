/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PostProductsRequestValuesAttributeCodeInner } from './PostProductsRequestValuesAttributeCodeInner';
import {
    PostProductsRequestValuesAttributeCodeInnerFromJSON,
    PostProductsRequestValuesAttributeCodeInnerFromJSONTyped,
    PostProductsRequestValuesAttributeCodeInnerToJSON,
} from './PostProductsRequestValuesAttributeCodeInner';

/**
 * Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details
 * @export
 * @interface PostProductsRequestValues
 */
export interface PostProductsRequestValues {
    /**
     * 
     * @type {Array<PostProductsRequestValuesAttributeCodeInner>}
     * @memberof PostProductsRequestValues
     */
    attributeCode?: Array<PostProductsRequestValuesAttributeCodeInner>;
}

/**
 * Check if a given object implements the PostProductsRequestValues interface.
 */
export function instanceOfPostProductsRequestValues(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PostProductsRequestValuesFromJSON(json: any): PostProductsRequestValues {
    return PostProductsRequestValuesFromJSONTyped(json, false);
}

export function PostProductsRequestValuesFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostProductsRequestValues {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attributeCode': !exists(json, 'attributeCode') ? undefined : ((json['attributeCode'] as Array<any>).map(PostProductsRequestValuesAttributeCodeInnerFromJSON)),
    };
}

export function PostProductsRequestValuesToJSON(value?: PostProductsRequestValues | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attributeCode': value.attributeCode === undefined ? undefined : ((value.attributeCode as Array<any>).map(PostProductsRequestValuesAttributeCodeInnerToJSON)),
    };
}

