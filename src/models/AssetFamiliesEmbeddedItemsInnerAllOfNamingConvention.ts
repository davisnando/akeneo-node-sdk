/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The naming convention ran over the asset code or the main media filename upon each asset creation, in order to automatically set several values in asset attributes. To learn more and see the format of this property, take a look at <a href='/concepts/asset-manager.html#focus-on-the-naming-convention'>here</a>.
 * @export
 * @interface AssetFamiliesEmbeddedItemsInnerAllOfNamingConvention
 */
export interface AssetFamiliesEmbeddedItemsInnerAllOfNamingConvention {
    /**
     * The string on which the naming convention should be applied. More details <a href='/concepts/asset-manager.html#source'>here</a>.
     * @type {object}
     * @memberof AssetFamiliesEmbeddedItemsInnerAllOfNamingConvention
     */
    source?: object;
    /**
     * The regular expression that should be applied on the source. More details <a href='/concepts/asset-manager.html#pattern'>here</a>.
     * @type {string}
     * @memberof AssetFamiliesEmbeddedItemsInnerAllOfNamingConvention
     */
    pattern?: string;
    /**
     * Whether the asset should be created if the naming convention failed to apply. More details <a href='/concepts/asset-manager.html#abort-asset-creation-on-error'>here</a>.
     * @type {boolean}
     * @memberof AssetFamiliesEmbeddedItemsInnerAllOfNamingConvention
     */
    abortAssetCreationOnError?: boolean;
}

/**
 * Check if a given object implements the AssetFamiliesEmbeddedItemsInnerAllOfNamingConvention interface.
 */
export function instanceOfAssetFamiliesEmbeddedItemsInnerAllOfNamingConvention(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AssetFamiliesEmbeddedItemsInnerAllOfNamingConventionFromJSON(json: any): AssetFamiliesEmbeddedItemsInnerAllOfNamingConvention {
    return AssetFamiliesEmbeddedItemsInnerAllOfNamingConventionFromJSONTyped(json, false);
}

export function AssetFamiliesEmbeddedItemsInnerAllOfNamingConventionFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetFamiliesEmbeddedItemsInnerAllOfNamingConvention {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'source': !exists(json, 'source') ? undefined : json['source'],
        'pattern': !exists(json, 'pattern') ? undefined : json['pattern'],
        'abortAssetCreationOnError': !exists(json, 'abort_asset_creation_on_error') ? undefined : json['abort_asset_creation_on_error'],
    };
}

export function AssetFamiliesEmbeddedItemsInnerAllOfNamingConventionToJSON(value?: AssetFamiliesEmbeddedItemsInnerAllOfNamingConvention | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'source': value.source,
        'pattern': value.pattern,
        'abort_asset_creation_on_error': value.abortAssetCreationOnError,
    };
}

