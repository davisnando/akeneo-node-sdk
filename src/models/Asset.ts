/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AssetEmbedded } from './AssetEmbedded';
import {
    AssetEmbeddedFromJSON,
    AssetEmbeddedFromJSONTyped,
    AssetEmbeddedToJSON,
} from './AssetEmbedded';
import type { ReferenceEntitiesLinks } from './ReferenceEntitiesLinks';
import {
    ReferenceEntitiesLinksFromJSON,
    ReferenceEntitiesLinksFromJSONTyped,
    ReferenceEntitiesLinksToJSON,
} from './ReferenceEntitiesLinks';

/**
 * 
 * @export
 * @interface Asset
 */
export interface Asset {
    /**
     * 
     * @type {AssetEmbedded}
     * @memberof Asset
     */
    embedded?: AssetEmbedded;
    /**
     * 
     * @type {ReferenceEntitiesLinks}
     * @memberof Asset
     */
    links?: ReferenceEntitiesLinks;
}

/**
 * Check if a given object implements the Asset interface.
 */
export function instanceOfAsset(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AssetFromJSON(json: any): Asset {
    return AssetFromJSONTyped(json, false);
}

export function AssetFromJSONTyped(json: any, ignoreDiscriminator: boolean): Asset {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'embedded': !exists(json, '_embedded') ? undefined : AssetEmbeddedFromJSON(json['_embedded']),
        'links': !exists(json, '_links') ? undefined : ReferenceEntitiesLinksFromJSON(json['_links']),
    };
}

export function AssetToJSON(value?: Asset | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '_embedded': AssetEmbeddedToJSON(value.embedded),
        '_links': ReferenceEntitiesLinksToJSON(value.links),
    };
}

