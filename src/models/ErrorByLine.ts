/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ErrorByLine
 */
export interface ErrorByLine {
    /**
     * Line number
     * @type {number}
     * @memberof ErrorByLine
     */
    line?: number;
    /**
     * Resource identifier, only filled when the resource is a product
     * @type {string}
     * @memberof ErrorByLine
     */
    identifier?: string;
    /**
     * Resource code, only filled when the resource is not a product
     * @type {string}
     * @memberof ErrorByLine
     */
    code?: string;
    /**
     * HTTP status code, see <a href="/documentation/responses.html#client-errors">Client errors</a> to understand the meaning of each code
     * @type {number}
     * @memberof ErrorByLine
     */
    statusCode?: number;
    /**
     * Message explaining the error
     * @type {string}
     * @memberof ErrorByLine
     */
    message?: string;
}

/**
 * Check if a given object implements the ErrorByLine interface.
 */
export function instanceOfErrorByLine(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ErrorByLineFromJSON(json: any): ErrorByLine {
    return ErrorByLineFromJSONTyped(json, false);
}

export function ErrorByLineFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorByLine {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'line': !exists(json, 'line') ? undefined : json['line'],
        'identifier': !exists(json, 'identifier') ? undefined : json['identifier'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'statusCode': !exists(json, 'status_code') ? undefined : json['status_code'],
        'message': !exists(json, 'message') ? undefined : json['message'],
    };
}

export function ErrorByLineToJSON(value?: ErrorByLine | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'line': value.line,
        'identifier': value.identifier,
        'code': value.code,
        'status_code': value.statusCode,
        'message': value.message,
    };
}

