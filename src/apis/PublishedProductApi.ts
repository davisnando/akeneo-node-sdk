/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GetProducts401Response,
  PublishedProducts,
  PublishedProductsEmbeddedItemsInnerAllOf,
} from '../models';
import {
    GetProducts401ResponseFromJSON,
    GetProducts401ResponseToJSON,
    PublishedProductsFromJSON,
    PublishedProductsToJSON,
    PublishedProductsEmbeddedItemsInnerAllOfFromJSON,
    PublishedProductsEmbeddedItemsInnerAllOfToJSON,
} from '../models';

export interface GetPublishedProductsRequest {
    search?: string;
    scope?: string;
    locales?: string;
    attributes?: string;
    paginationType?: GetPublishedProductsPaginationTypeEnum;
    page?: number;
    searchAfter?: string;
    limit?: number;
    withCount?: boolean;
}

export interface GetPublishedProductsCodeRequest {
    code: string;
}

/**
 * 
 */
export class PublishedProductApi extends runtime.BaseAPI {

    /**
     * This endpoint allows you to get a list of published products. Published products are paginated and they can be filtered.
     * Get list of published products
     */
    async getPublishedProductsRaw(requestParameters: GetPublishedProductsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PublishedProducts>> {
        const queryParameters: any = {};

        if (requestParameters.search !== undefined) {
            queryParameters['search'] = requestParameters.search;
        }

        if (requestParameters.scope !== undefined) {
            queryParameters['scope'] = requestParameters.scope;
        }

        if (requestParameters.locales !== undefined) {
            queryParameters['locales'] = requestParameters.locales;
        }

        if (requestParameters.attributes !== undefined) {
            queryParameters['attributes'] = requestParameters.attributes;
        }

        if (requestParameters.paginationType !== undefined) {
            queryParameters['pagination_type'] = requestParameters.paginationType;
        }

        if (requestParameters.page !== undefined) {
            queryParameters['page'] = requestParameters.page;
        }

        if (requestParameters.searchAfter !== undefined) {
            queryParameters['search_after'] = requestParameters.searchAfter;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.withCount !== undefined) {
            queryParameters['with_count'] = requestParameters.withCount;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/rest/v1/published-products`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PublishedProductsFromJSON(jsonValue));
    }

    /**
     * This endpoint allows you to get a list of published products. Published products are paginated and they can be filtered.
     * Get list of published products
     */
    async getPublishedProducts(requestParameters: GetPublishedProductsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PublishedProducts> {
        const response = await this.getPublishedProductsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * This endpoint allows you to get the information about a given published product.
     * Get a published product
     */
    async getPublishedProductsCodeRaw(requestParameters: GetPublishedProductsCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PublishedProductsEmbeddedItemsInnerAllOf>> {
        if (requestParameters.code === null || requestParameters.code === undefined) {
            throw new runtime.RequiredError('code','Required parameter requestParameters.code was null or undefined when calling getPublishedProductsCode.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/rest/v1/published-products/{code}`.replace(`{${"code"}}`, encodeURIComponent(String(requestParameters.code))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PublishedProductsEmbeddedItemsInnerAllOfFromJSON(jsonValue));
    }

    /**
     * This endpoint allows you to get the information about a given published product.
     * Get a published product
     */
    async getPublishedProductsCode(requestParameters: GetPublishedProductsCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PublishedProductsEmbeddedItemsInnerAllOf> {
        const response = await this.getPublishedProductsCodeRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const GetPublishedProductsPaginationTypeEnum = {
    Page: 'page',
    SearchAfter: 'search_after'
} as const;
export type GetPublishedProductsPaginationTypeEnum = typeof GetPublishedProductsPaginationTypeEnum[keyof typeof GetPublishedProductsPaginationTypeEnum];
