/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GetProducts401Response,
  GetReferenceEntitiesCode200Response,
  PatchReferenceEntityCodeRequest,
  ReferenceEntities,
} from '../models';
import {
    GetProducts401ResponseFromJSON,
    GetProducts401ResponseToJSON,
    GetReferenceEntitiesCode200ResponseFromJSON,
    GetReferenceEntitiesCode200ResponseToJSON,
    PatchReferenceEntityCodeRequestFromJSON,
    PatchReferenceEntityCodeRequestToJSON,
    ReferenceEntitiesFromJSON,
    ReferenceEntitiesToJSON,
} from '../models';

export interface GetReferenceEntitiesRequest {
    searchAfter?: string;
}

export interface GetReferenceEntitiesCodeRequest {
    code: string;
}

export interface PatchReferenceEntityCodeOperationRequest {
    code: string;
    body: PatchReferenceEntityCodeRequest;
}

/**
 * 
 */
export class ReferenceEntityApi extends runtime.BaseAPI {

    /**
     * This endpoint allows you to get a list of reference entities. Reference entities are paginated.
     * Get list of reference entities
     */
    async getReferenceEntitiesRaw(requestParameters: GetReferenceEntitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ReferenceEntities>> {
        const queryParameters: any = {};

        if (requestParameters.searchAfter !== undefined) {
            queryParameters['search_after'] = requestParameters.searchAfter;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/rest/v1/reference-entities`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ReferenceEntitiesFromJSON(jsonValue));
    }

    /**
     * This endpoint allows you to get a list of reference entities. Reference entities are paginated.
     * Get list of reference entities
     */
    async getReferenceEntities(requestParameters: GetReferenceEntitiesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ReferenceEntities> {
        const response = await this.getReferenceEntitiesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * This endpoint allows you to get the information about a given reference entity.
     * Get a reference entity
     */
    async getReferenceEntitiesCodeRaw(requestParameters: GetReferenceEntitiesCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetReferenceEntitiesCode200Response>> {
        if (requestParameters.code === null || requestParameters.code === undefined) {
            throw new runtime.RequiredError('code','Required parameter requestParameters.code was null or undefined when calling getReferenceEntitiesCode.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/rest/v1/reference-entities/{code}`.replace(`{${"code"}}`, encodeURIComponent(String(requestParameters.code))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetReferenceEntitiesCode200ResponseFromJSON(jsonValue));
    }

    /**
     * This endpoint allows you to get the information about a given reference entity.
     * Get a reference entity
     */
    async getReferenceEntitiesCode(requestParameters: GetReferenceEntitiesCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetReferenceEntitiesCode200Response> {
        const response = await this.getReferenceEntitiesCodeRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * This endpoint allows you to update a given reference entity. Note that if the reference entity does not already exist, it creates it.
     * Update/create a reference entity
     */
    async patchReferenceEntityCodeRaw(requestParameters: PatchReferenceEntityCodeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.code === null || requestParameters.code === undefined) {
            throw new runtime.RequiredError('code','Required parameter requestParameters.code was null or undefined when calling patchReferenceEntityCode.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling patchReferenceEntityCode.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/rest/v1/reference-entities/{code}`.replace(`{${"code"}}`, encodeURIComponent(String(requestParameters.code))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: PatchReferenceEntityCodeRequestToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * This endpoint allows you to update a given reference entity. Note that if the reference entity does not already exist, it creates it.
     * Update/create a reference entity
     */
    async patchReferenceEntityCode(requestParameters: PatchReferenceEntityCodeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.patchReferenceEntityCodeRaw(requestParameters, initOverrides);
    }

}
