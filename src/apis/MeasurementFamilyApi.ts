/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GetProducts401Response,
  MeasurementFamiliesGetList200Response,
  PatchMeasurementFamilies200ResponseInner,
} from '../models';
import {
    GetProducts401ResponseFromJSON,
    GetProducts401ResponseToJSON,
    MeasurementFamiliesGetList200ResponseFromJSON,
    MeasurementFamiliesGetList200ResponseToJSON,
    PatchMeasurementFamilies200ResponseInnerFromJSON,
    PatchMeasurementFamilies200ResponseInnerToJSON,
} from '../models';

export interface PatchMeasurementFamiliesRequest {
    body?: Array<MeasurementFamiliesGetList200Response>;
}

/**
 * 
 */
export class MeasurementFamilyApi extends runtime.BaseAPI {

    /**
     * This endpoint allows you to get a list of measurement families.
     * Get list of measurement families
     */
    async measurementFamiliesGetListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MeasurementFamiliesGetList200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/rest/v1/measurement-families`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MeasurementFamiliesGetList200ResponseFromJSON(jsonValue));
    }

    /**
     * This endpoint allows you to get a list of measurement families.
     * Get list of measurement families
     */
    async measurementFamiliesGetList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MeasurementFamiliesGetList200Response> {
        const response = await this.measurementFamiliesGetListRaw(initOverrides);
        return await response.value();
    }

    /**
     * This endpoint allows you to update and/or create several measurement families at once.
     * Update/create several measurement families
     */
    async patchMeasurementFamiliesRaw(requestParameters: PatchMeasurementFamiliesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PatchMeasurementFamilies200ResponseInner>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/rest/v1/measurement-families`,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body.map(MeasurementFamiliesGetList200ResponseToJSON),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(PatchMeasurementFamilies200ResponseInnerFromJSON));
    }

    /**
     * This endpoint allows you to update and/or create several measurement families at once.
     * Update/create several measurement families
     */
    async patchMeasurementFamilies(requestParameters: PatchMeasurementFamiliesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PatchMeasurementFamilies200ResponseInner>> {
        const response = await this.patchMeasurementFamiliesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
