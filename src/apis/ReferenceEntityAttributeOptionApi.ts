/* tslint:disable */
/* eslint-disable */
/**
 * Akeneo PIM REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GetProducts401Response,
  GetReferenceEntityAttributesAttributeCodeOptions200ResponseInner,
} from '../models';
import {
    GetProducts401ResponseFromJSON,
    GetProducts401ResponseToJSON,
    GetReferenceEntityAttributesAttributeCodeOptions200ResponseInnerFromJSON,
    GetReferenceEntityAttributesAttributeCodeOptions200ResponseInnerToJSON,
} from '../models';

export interface GetReferenceEntityAttributesAttributeCodeOptionsRequest {
    referenceEntityCode: string;
    attributeCode: string;
}

export interface GetReferenceEntityAttributesAttributeCodeOptionsCodeRequest {
    referenceEntityCode: string;
    attributeCode: string;
    code: string;
}

export interface PatchReferenceEntityAttributesAttributeCodeOptionsCodeRequest {
    referenceEntityCode: string;
    attributeCode: string;
    code: string;
    body: GetReferenceEntityAttributesAttributeCodeOptions200ResponseInner;
}

/**
 * 
 */
export class ReferenceEntityAttributeOptionApi extends runtime.BaseAPI {

    /**
     * This endpoint allows you to get a list of attribute options for a given reference entity.
     * Get a list of attribute options of a given attribute for a given reference entity
     */
    async getReferenceEntityAttributesAttributeCodeOptionsRaw(requestParameters: GetReferenceEntityAttributesAttributeCodeOptionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GetReferenceEntityAttributesAttributeCodeOptions200ResponseInner>>> {
        if (requestParameters.referenceEntityCode === null || requestParameters.referenceEntityCode === undefined) {
            throw new runtime.RequiredError('referenceEntityCode','Required parameter requestParameters.referenceEntityCode was null or undefined when calling getReferenceEntityAttributesAttributeCodeOptions.');
        }

        if (requestParameters.attributeCode === null || requestParameters.attributeCode === undefined) {
            throw new runtime.RequiredError('attributeCode','Required parameter requestParameters.attributeCode was null or undefined when calling getReferenceEntityAttributesAttributeCodeOptions.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/rest/v1/reference-entities/{reference_entity_code}/attributes/{attribute_code}/options`.replace(`{${"reference_entity_code"}}`, encodeURIComponent(String(requestParameters.referenceEntityCode))).replace(`{${"attribute_code"}}`, encodeURIComponent(String(requestParameters.attributeCode))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GetReferenceEntityAttributesAttributeCodeOptions200ResponseInnerFromJSON));
    }

    /**
     * This endpoint allows you to get a list of attribute options for a given reference entity.
     * Get a list of attribute options of a given attribute for a given reference entity
     */
    async getReferenceEntityAttributesAttributeCodeOptions(requestParameters: GetReferenceEntityAttributesAttributeCodeOptionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GetReferenceEntityAttributesAttributeCodeOptions200ResponseInner>> {
        const response = await this.getReferenceEntityAttributesAttributeCodeOptionsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * This endpoint allows you to get the information about a given attribute option.
     * Get an attribute option for a given attribute of a given reference entity
     */
    async getReferenceEntityAttributesAttributeCodeOptionsCodeRaw(requestParameters: GetReferenceEntityAttributesAttributeCodeOptionsCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetReferenceEntityAttributesAttributeCodeOptions200ResponseInner>> {
        if (requestParameters.referenceEntityCode === null || requestParameters.referenceEntityCode === undefined) {
            throw new runtime.RequiredError('referenceEntityCode','Required parameter requestParameters.referenceEntityCode was null or undefined when calling getReferenceEntityAttributesAttributeCodeOptionsCode.');
        }

        if (requestParameters.attributeCode === null || requestParameters.attributeCode === undefined) {
            throw new runtime.RequiredError('attributeCode','Required parameter requestParameters.attributeCode was null or undefined when calling getReferenceEntityAttributesAttributeCodeOptionsCode.');
        }

        if (requestParameters.code === null || requestParameters.code === undefined) {
            throw new runtime.RequiredError('code','Required parameter requestParameters.code was null or undefined when calling getReferenceEntityAttributesAttributeCodeOptionsCode.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/rest/v1/reference-entities/{reference_entity_code}/attributes/{attribute_code}/options/{code}`.replace(`{${"reference_entity_code"}}`, encodeURIComponent(String(requestParameters.referenceEntityCode))).replace(`{${"attribute_code"}}`, encodeURIComponent(String(requestParameters.attributeCode))).replace(`{${"code"}}`, encodeURIComponent(String(requestParameters.code))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetReferenceEntityAttributesAttributeCodeOptions200ResponseInnerFromJSON(jsonValue));
    }

    /**
     * This endpoint allows you to get the information about a given attribute option.
     * Get an attribute option for a given attribute of a given reference entity
     */
    async getReferenceEntityAttributesAttributeCodeOptionsCode(requestParameters: GetReferenceEntityAttributesAttributeCodeOptionsCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetReferenceEntityAttributesAttributeCodeOptions200ResponseInner> {
        const response = await this.getReferenceEntityAttributesAttributeCodeOptionsCodeRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * This endpoint allows you to update a given option for a given attribute and a given reference entity. Learn more about <a href=\"/documentation/update.html#patch-reference-entity-record-values\">Update behavior</a>. Note that if the option does not already exist for the given attribute of the given reference entity, it creates it.
     * Update/create a reference entity attribute option
     */
    async patchReferenceEntityAttributesAttributeCodeOptionsCodeRaw(requestParameters: PatchReferenceEntityAttributesAttributeCodeOptionsCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.referenceEntityCode === null || requestParameters.referenceEntityCode === undefined) {
            throw new runtime.RequiredError('referenceEntityCode','Required parameter requestParameters.referenceEntityCode was null or undefined when calling patchReferenceEntityAttributesAttributeCodeOptionsCode.');
        }

        if (requestParameters.attributeCode === null || requestParameters.attributeCode === undefined) {
            throw new runtime.RequiredError('attributeCode','Required parameter requestParameters.attributeCode was null or undefined when calling patchReferenceEntityAttributesAttributeCodeOptionsCode.');
        }

        if (requestParameters.code === null || requestParameters.code === undefined) {
            throw new runtime.RequiredError('code','Required parameter requestParameters.code was null or undefined when calling patchReferenceEntityAttributesAttributeCodeOptionsCode.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling patchReferenceEntityAttributesAttributeCodeOptionsCode.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/rest/v1/reference-entities/{reference_entity_code}/attributes/{attribute_code}/options/{code}`.replace(`{${"reference_entity_code"}}`, encodeURIComponent(String(requestParameters.referenceEntityCode))).replace(`{${"attribute_code"}}`, encodeURIComponent(String(requestParameters.attributeCode))).replace(`{${"code"}}`, encodeURIComponent(String(requestParameters.code))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: GetReferenceEntityAttributesAttributeCodeOptions200ResponseInnerToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * This endpoint allows you to update a given option for a given attribute and a given reference entity. Learn more about <a href=\"/documentation/update.html#patch-reference-entity-record-values\">Update behavior</a>. Note that if the option does not already exist for the given attribute of the given reference entity, it creates it.
     * Update/create a reference entity attribute option
     */
    async patchReferenceEntityAttributesAttributeCodeOptionsCode(requestParameters: PatchReferenceEntityAttributesAttributeCodeOptionsCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.patchReferenceEntityAttributesAttributeCodeOptionsCodeRaw(requestParameters, initOverrides);
    }

}
